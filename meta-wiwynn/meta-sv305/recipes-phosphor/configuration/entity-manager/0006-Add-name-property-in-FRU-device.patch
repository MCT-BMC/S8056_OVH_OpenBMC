From 6da918ef4956a05aac7ddaf41c604384f8d026aa Mon Sep 17 00:00:00 2001
From: Eli Huang <Eli_Huang@wiwynn.com>
Date: Tue, 16 Mar 2021 14:25:50 +0800
Subject: [PATCH] Add name property in FRU device

---
 include/FruUtils.hpp |  1 +
 src/FruDevice.cpp    | 15 ++++++++++++++-
 2 files changed, 15 insertions(+), 1 deletion(-)

diff --git a/include/FruUtils.hpp b/include/FruUtils.hpp
index b1ef0cd..e6c6418 100644
--- a/include/FruUtils.hpp
+++ b/include/FruUtils.hpp
@@ -57,6 +57,7 @@ enum class fruAreas
 
 struct DeviceInfo
 {
+    std::string name;
     uint32_t deviceID;
     size_t size;
     bool readOnly;
diff --git a/src/FruDevice.cpp b/src/FruDevice.cpp
index bdfbd28..80b4815 100644
--- a/src/FruDevice.cpp
+++ b/src/FruDevice.cpp
@@ -544,12 +544,24 @@ static void getFruDevices(BusMap& busmap)
     {
         for (auto& fru : *fruFind)
         {
+            std::string name;
             uint32_t index;
             size_t size;
             bool readOnly = false;
             int bus;
             std::string address;
 
+            auto nameFind = fru.find("Name");
+            if (nameFind != fru.end())
+            {
+                nameFind->get_to(name);
+            }
+            else
+            {
+                std::cerr << "Can't find Index in fru json\n";
+                continue;
+            }
+
             auto indexFind = fru.find("Index");
             if (indexFind != fru.end())
             {
@@ -613,7 +625,7 @@ static void getFruDevices(BusMap& busmap)
                 continue;
             }
 
-            struct DeviceInfo deviceInfo = {index, size, readOnly};
+            struct DeviceInfo deviceInfo = {name, index, size, readOnly};
             if (busmap.find(bus) == busmap.end())
             {
                 busmap[bus] = std::make_shared<DeviceMap>();
@@ -818,6 +830,7 @@ void AddFRUObjectToDbus(
     deviceBusAddr << bus << "-" << std::right << std::setfill('0')
                   << std::setw(4) << std::hex << address;
     auto deviceInfo = deviceInfoMap[deviceBusAddr.str()];
+    iface->register_property("NAME", deviceInfo.name);
     iface->register_property("INDEX", deviceInfo.deviceID);
     iface->register_property("SIZE", deviceInfo.size);
     iface->register_property("READONLY", deviceInfo.readOnly);
-- 
2.28.0

